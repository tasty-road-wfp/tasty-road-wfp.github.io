{"version":3,"sources":["component/Header/tmapLogo.jpg","logo.svg","component/Header/wfpStandardLogo.svg","component/Header/index.js","container/SimpleContainer.js","container/InfoContainer.js","component/HealthInfo/HealthInfoArc.js","component/HealthInfo/HealthInfoViz.js","component/HealthInfo/HealthInfoText.js","component/HealthInfo/index.js","component/StarvationInfo/StarvationInfoText.js","component/StarvationInfo/constants.js","component/StarvationInfo/StarvationInfoChart.js","hooks/useD3.js","component/StarvationInfo/StarvationInfoVizController.js","component/StarvationInfo/StarvationInfoViz.js","component/StarvationInfo/index.js","container/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","tmapLogo","alt","wfpStandardLogo","SimpleContainer","backgroundColor","color","children","flex","style","InfoContainer","left","right","flexLeft","flexRight","flexDirection","HealthInfoArc","data","index","createArc","colors","format","onClick","onStart","onFinish","d","fill","transform","centroid","textAnchor","alignmentBaseline","fontSize","fontWeight","label","value","dims","HealthInfoViz","useState","dataList","setDataList","createPie","d3","sort","innerRadius","outerRadius","width","height","map","i","pieData","canIncrease","canDecrease","mealAmountObj","healthObj","HealthInfoText","HealthInfo","StarvationInfoText","MAX_FOOD_WASTE_IN_TONS","STARVATION_INFO_CHART_D3_X_AXIS_ID","STARVATION_INFO_CHART_D3_Y_AXIS_ID","STARVATION_INFO_CHART_D3_BAR_CHART","margin","StarvationInfoChart","foodWasteInTons","ref","renderChartFn","dependencies","useRef","useEffect","current","useD3","svg","name","x","domain","range","padding","y","nice","select","call","g","attr","tickSizeOuter","remove","selectAll","join","bandwidth","drawFoodWasteChart","id","useStyles","makeStyles","root","colorPrimary","marks","StarvationInfoVizController","setFoodWasteInTons","classes","Slider","min","step","max","onChange","event","newValue","StarvationInfoViz","StarvationInfo","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b683f64.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmapLogo.3634d587.jpg\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/wfpStandardLogo.bedfca1a.svg\";","import tmapLogo from './tmapLogo.jpg'\nimport wfpStandardLogo from './wfpStandardLogo.svg';\n\nconst Header = () => \n  <header className=\"App-header\">\n    <img src={tmapLogo} className=\"App-logo\" alt=\"TMap Logo\" />\n    <span className=\"tab\">&#9;</span>\n    X\n    <span className=\"tab\">&#9;</span>\n    <img src={wfpStandardLogo} className=\"App-logo\" alt=\"WFP Logo\" />\n  </header>;\n\nexport default Header;\n","const SimpleContainer = ({backgroundColor, color, children, flex}) =>\n  <div \n    className=\"section-container\" \n    style={{\n      backgroundColor,\n      color,\n      flex\n    }}\n  >\n    {children}\n  </div>;\n\nexport default SimpleContainer;\n","import SimpleContainer from './SimpleContainer';\n\nconst InfoContainer = ({backgroundColor, color, flex, left, right, flexLeft, flexRight}) =>\n  <SimpleContainer style={{flexDirection: 'row'}} backgroundColor={backgroundColor} flex={flex} color={color}>\n    <SimpleContainer flex={flexLeft}>\n      {left}\n    </SimpleContainer>\n    <SimpleContainer flex={flexRight}>\n      {right}\n    </SimpleContainer>\n  </SimpleContainer>\n\nexport default InfoContainer;\n","// import { useLongPress, LongPressDetectEvents } from 'use-long-press';\n\nconst HealthInfoArc = ({ data, index, createArc, colors, format, onClick, onStart, onFinish }) => {\n  // const bind = useLongPress(onClick, {\n  //   onStart: () => { \n  //     console.log('started') \n  //     onStart()\n  //   },\n  //   onFinish: () => { \n  //     console.log(\"Long press finished\")\n  //     onFinish()\n  //   },\n  //   onCancel: () => { console.log(\"Press cancelled\") },\n  //   threshold: 500,\n  //   captureEvent: true,\n  //   detect: LongPressDetectEvents.BOTH\n  // })\n  // console.log(bind)\n\n  return (\n    <g key={index} className=\"arc\">\n      <path \n        className=\"arc\" \n        d={createArc(data)} \n        fill={colors(index)}\n        onClick={onClick}\n        // {...bind}\n      />\n      <text\n        transform={`translate(${createArc.centroid(data)})`}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n        fill=\"white\"\n        fontSize=\"12\"\n        fontWeight=\"bold\"\n        onClick={onClick}\n        // {...bind}\n      >\n        {data.data.label}{`: `}{format(data.value)}\n      </text>\n    </g>\n  );\n}\n  \n\nexport default HealthInfoArc;\n","import { useEffect, useState, useRef } from 'react';\nimport * as d3 from 'd3';\nimport HealthInfoArc from './HealthInfoArc';\n\nconst dims = { height: 300, width: 300, radius: 150};\n// const center = { x: dims.width / 2 + 5, y: dims.height / 2 + 5 }\n\nconst HealthInfoViz = () => {\n  const [dataList, setDataList] = useState([\n    {\n      label: '식사량',\n      value: 70\n    },\n    {\n      label: '건강',\n      value: 30\n    },\n  ]);\n  // const [pressed, setPressed] = useState(false);\n  // const onStart = () => { setPressed(true) }\n  // const onFinish = () => { setPressed(false) }\n\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n\n  const createArc = d3\n    .arc()\n    .innerRadius(dims.radius / 2)\n    .outerRadius(dims.radius);\n\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format('.2f');\n  const data = createPie(dataList);\n\n  const onClickArc = pieData => () => {\n    const canIncrease = ({ value }) => {\n      return value < 99\n    };\n    const canDecrease = ({ label, value }) => {\n      if (label === '식사량')\n        return value > 40\n      else\n        return value > 1\n    };\n\n    const [mealAmountObj, healthObj] = dataList;\n\n    if (pieData.data.label === '건강' && canIncrease(healthObj) && canDecrease(mealAmountObj)) {\n      setDataList([\n        {\n          ...mealAmountObj,\n          value: mealAmountObj.value - 1\n        },\n        {\n          ...healthObj,\n          value: healthObj.value + 1\n        },\n      ]);\n    } else if (pieData.data.label === '식사량' && canDecrease(healthObj) && canIncrease(mealAmountObj)) {\n      setDataList([\n        {\n          ...mealAmountObj,\n          value: mealAmountObj.value + 1\n        },\n        {\n          ...healthObj,\n          value: healthObj.value - 1\n        },\n      ]);\n    }\n    \n  }\n\n  return (\n    <svg width={dims.width} height={dims.height}>\n      <g transform={`translate(${dims.radius} ${dims.radius})`}>\n        {data.map((d, i) => (\n          <HealthInfoArc \n            key={`health-info-arc-${i}`}\n            data={d}\n            index={i}\n            createArc={createArc}\n            colors={colors}\n            format={format}\n            onClick={onClickArc(d)}\n            // onStart={onStart}\n            // onFinish={onFinish}\n          />\n        ))}\n      </g>\n    </svg>\n  );\n  // const d3Container = useRef(null);\n  // const [health, setHealth] = useState(30)\n\n  // useEffect(() => {\n  //   if (health && d3Container.current) {\n  //     const svg = d3.select(d3Container.current);\n\n  //     const graph = svg\n  //       .append('g')\n  //       .attr('transform', `translate(${center.x}, ${center.y})`)\n  //       // .selectAll('text')\n  //       // .data(health)\n\n  //     const pie = d3\n  //       .pie()\n  //       .sort(null)\n  //       .value(d => d)\n\n  //     const arcPath = d3\n  //       .arc()\n  //       .outerRadius(dims.radius)\n  //       .innerRadius(dims.radius / 2);\n\n  //     const update = data => {\n  //       const path = graph.selectAll('path').data(pie(data))\n\n  //       path\n  //         .enter()\n  //         .append('path')\n  //         .attr('class', 'arc')\n  //         .attr('d', arcPath)\n  //         .attr('stroke', 'black')\n  //         .attr('stroke-width', 3);\n  //     }\n\n  //     update(health)\n\n  //     // update.enter()\n  //     //   .append('text')\n  //     //   .attr('x', (d, i) => i * 25)\n  //     //   .attr('y', 40)\n  //     //   .style('font-size', 24)\n  //     //   .text(d => d)\n\n  //     // update\n  //     //   .attr('x', (d, i) => i * 40)\n  //     //   .text(d => d);\n\n  //     // update.exit()\n  //     //   .remove();\n  //   }\n  // }, [health, d3Container.current])\n\n  // return (\n  //   <svg \n  //     width={200}\n  //     height={200}\n  //     ref={d3Container}\n  //   />\n  // );\n};\n\nexport default HealthInfoViz;\n","const HealthInfoText = () => {\n  return (\n    <div>health info text</div>\n  );\n};\n\nexport default HealthInfoText;\n","import InfoContainer from '../../container/InfoContainer';\nimport HealthInfoViz from './HealthInfoViz'\nimport HealthInfoText from './HealthInfoText'\n\nconst HealthInfo = () =>\n  <InfoContainer \n    backgroundColor={'white'}\n    flex={1}\n    left={<HealthInfoViz />}\n    right={<HealthInfoText />}\n    flexLeft={1}\n    flexRight={2}\n  />;\n\nexport default HealthInfo;\n","const StarvationInfoText = () => {\n  return (\n    <div>starvation info text</div>\n  );\n};\n\nexport default StarvationInfoText;\n","export const MAX_FOOD_WASTE_IN_TONS = 1300000000;\nexport const MAX_UNDERNOURISHED_POPULATION = 800000000;\nexport const FOOD_NEEDED_BY_INDIVIDUAL = MAX_FOOD_WASTE_IN_TONS / 4 / MAX_UNDERNOURISHED_POPULATION;\nexport const ZERO_HUNGER_POINT = MAX_FOOD_WASTE_IN_TONS / 4 * 3\n","import * as d3 from 'd3';\nimport { useD3 } from '../../hooks/useD3';\nimport {\n  MAX_FOOD_WASTE_IN_TONS,\n  ZERO_HUNGER_POINT,\n} from './constants';\n\nconst STARVATION_INFO_CHART_D3_X_AXIS_ID = 'starvation-info-chart-d3-x-axis';\nconst STARVATION_INFO_CHART_D3_Y_AXIS_ID = 'starvation-info-chart-d3-y-axis';\nconst STARVATION_INFO_CHART_D3_BAR_CHART = 'starvation-info-chart-d3-bar-chart';\n\nconst dims = { height: 300, width: 600, radius: 150};\nconst margin = ({top: 30, right: 0, bottom: 30, left: 80});\n// const graphWidth = dims.width - margin.left - margin.right;\n// const graphHeight = dims.height - margin.top - margin.bottom;\n\nconst StarvationInfoChart = ({ foodWasteInTons }) => {\n  const drawFoodWasteChart = (svg) => {\n    // const undernourishedPopulation = foodWasteInTons / 4;\n    const criticalFoodWaste = foodWasteInTons - ZERO_HUNGER_POINT\n    const data = [\n      {\n        name: '음식물 쓰레기 양',\n        value: foodWasteInTons,\n        color: 'orange'\n      },\n      {\n        name: '굶주린 사람들',\n        // value: criticalFoodWaste > 0 ? criticalFoodWaste / 4 : 0,\n        value: foodWasteInTons / 4,\n        color: 'gray'\n      }\n    ];\n\n    const x = d3.scaleBand()\n      .domain((data.map(d => d.name)))\n      .range([margin.left, dims.width - margin.right])\n      .padding(0.2);\n\n    const y = d3.scaleLinear()\n      .domain([0, MAX_FOOD_WASTE_IN_TONS + 100000000])\n      .nice()\n      .range([dims.height - margin.bottom, margin.top])\n\n    const xAxis = g => g\n      .attr('transform', `translate(0, ${dims.height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n\n    const yAxis = g => g\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.domain').remove()); \n\n    svg.select(`#${STARVATION_INFO_CHART_D3_X_AXIS_ID}`).call(xAxis);\n    svg.select(`#${STARVATION_INFO_CHART_D3_Y_AXIS_ID}`).call(yAxis);\n    \n    svg.select(`#${STARVATION_INFO_CHART_D3_BAR_CHART}`)\n      // .selectAll('rect').data(data).enter().append('rect')\n      .selectAll('.bar')\n      .data(data)\n      .join('rect')\n      .attr('class', 'bar')\n      .attr('fill', d => d.color)\n      .attr('x', d => x(d.name))\n      .attr('y', d => y(d.value))\n      .attr('height', d => y(0) - y(d.value))\n      .attr('width', x.bandwidth());\n  };\n\n  const ref = useD3(\n    (svg) => {\n      drawFoodWasteChart(svg);\n    },\n    [foodWasteInTons]\n  );\n\n  return (\n    <div>\n      <svg ref={ref} width={dims.width} height={dims.height}>\n        <g id={STARVATION_INFO_CHART_D3_X_AXIS_ID}></g>\n        <g id={STARVATION_INFO_CHART_D3_Y_AXIS_ID}></g>\n        <g id={STARVATION_INFO_CHART_D3_BAR_CHART}></g>\n      </svg>\n    </div>\n  );\n};\n\nexport default StarvationInfoChart;\n","import { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n\n  return ref;\n};\n","import Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MAX_FOOD_WASTE_IN_TONS } from './constants';\n\nconst useStyles = makeStyles({\n  root: {\n    color: 'white',\n    colorPrimary: 'white',\n  },\n})\n\nconst marks = [\n  {\n    value: 0,\n    label: '0T'\n  },\n  {\n    value: MAX_FOOD_WASTE_IN_TONS,\n    label: '1.3T'\n  }\n];\n\nconst StarvationInfoVizController = ({ foodWasteInTons, setFoodWasteInTons }) => {\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setFoodWasteInTons(newValue);\n  };\n\n  return (\n    <Slider \n      className={classes.root}\n      value={foodWasteInTons}\n      min={0}\n      step={1}\n      max={MAX_FOOD_WASTE_IN_TONS}\n      marks={marks}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default StarvationInfoVizController;\n\n","import { useState } from 'react';\nimport StarvationInfoChart from './StarvationInfoChart';\nimport StarvationInfoVizController from './StarvationInfoVizController';\n\nconst StarvationInfoViz = () => {\n  const [foodWasteInTons, setFoodWasteInTons] = useState(1300000000);\n\n  return (\n    <div>\n      \n      <StarvationInfoChart foodWasteInTons={foodWasteInTons} />\n      <StarvationInfoVizController\n        foodWasteInTons={foodWasteInTons}\n        setFoodWasteInTons={setFoodWasteInTons}\n      />\n    </div>\n    \n  );\n};\n\nexport default StarvationInfoViz;\n","import InfoContainer from '../../container/InfoContainer';\nimport StarvationInfoText from './StarvationInfoText';\nimport StarvationInfoViz from './StarvationInfoViz';\n\nconst StarvationInfo = () =>\n  <InfoContainer \n    backgroundColor={'#ea002c'}\n    color={'white'}\n    flex={1}\n    left={<StarvationInfoText />}\n    right={<StarvationInfoViz />}\n  />;\n\nexport default StarvationInfo;\n","import Header from '../component/Header';\nimport InfoContainer from './InfoContainer';\nimport HealthInfo from '../component/HealthInfo';\nimport StarvationInfo from '../component/StarvationInfo';\n\nconst Main = () =>\n  <div>\n    <Header />\n    <div className=\"page-container\">\n      <HealthInfo />\n      <StarvationInfo />\n      {['white', 'red'].map((color, i) => \n        <InfoContainer\n          key={`container${i}`} \n          backgroundColor={color} \n          flex={i === 0 ? 2 : 1}\n        />)}\n    </div>\n  </div>;\n\nexport default Main;\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from './container/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}