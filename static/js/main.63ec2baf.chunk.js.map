{"version":3,"sources":["component/Header/tmapLogo.jpg","logo.svg","component/Header/wfpStandardLogo.svg","component/Header/index.js","container/SimpleContainer.js","container/InfoContainer.js","component/HealthInfo/HealthInfoArc.js","component/HealthInfo/HealthInfoViz.js","component/HealthInfo/HealthInfoText.js","component/HealthInfo/index.js","container/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","tmapLogo","alt","wfpStandardLogo","SimpleContainer","backgroundColor","children","flex","style","InfoContainer","left","right","flexDirection","HealthInfoArc","data","index","createArc","colors","format","onClick","d","fill","transform","centroid","textAnchor","alignmentBaseline","fontSize","fontWeight","label","value","dims","HealthInfoViz","useState","dataList","setDataList","createPie","d3","sort","innerRadius","outerRadius","width","height","map","i","pieData","canIncrease","canDecrease","healthObj","mealAmountObj","HealthInfoText","HealthInfo","console","log","Main","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63ec2baf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmapLogo.3634d587.jpg\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/wfpStandardLogo.bedfca1a.svg\";","import tmapLogo from './tmapLogo.jpg'\nimport wfpStandardLogo from './wfpStandardLogo.svg';\n\nconst Header = () => \n  <header className=\"App-header\">\n    <img src={tmapLogo} className=\"App-logo\" alt=\"TMap Logo\" />\n    <span className=\"tab\">&#9;</span>\n    X\n    <span className=\"tab\">&#9;</span>\n    <img src={wfpStandardLogo} className=\"App-logo\" alt=\"WFP Logo\" />\n  </header>;\n\nexport default Header;\n","const SimpleContainer = ({backgroundColor, children, flex}) =>\n  <div \n    className=\"section-container\" \n    style={{\n      backgroundColor,\n      flex\n    }}\n  >\n    {children}\n  </div>;\n\nexport default SimpleContainer;\n","import SimpleContainer from './SimpleContainer';\n\nconst InfoContainer = ({backgroundColor, flex, left, right}) =>\n  <SimpleContainer style={{flexDirection: 'row'}} backgroundColor={backgroundColor} flex={flex}>\n    <SimpleContainer>\n      {left}\n    </SimpleContainer>\n    <SimpleContainer>\n      {right}\n    </SimpleContainer>\n  </SimpleContainer>\n\nexport default InfoContainer;\n","const HealthInfoArc = ({ data, index, createArc, colors, format, onClick }) =>\n  <g key={index} className=\"arc\">\n    <path \n      className=\"arc\" \n      d={createArc(data)} \n      fill={colors(index)}\n      onClick={onClick}\n    />\n    <text\n      transform={`translate(${createArc.centroid(data)})`}\n      textAnchor=\"middle\"\n      alignmentBaseline=\"middle\"\n      fill=\"white\"\n      fontSize=\"12\"\n      fontWeight=\"bold\"\n      onClick={onClick}\n    >\n      {data.data.label}{`: `}{format(data.value)}\n    </text>\n  </g>;\n\nexport default HealthInfoArc;\n","import { useEffect, useState, useRef } from 'react';\nimport * as d3 from 'd3';\nimport HealthInfoArc from './HealthInfoArc';\n\nconst dims = { height: 300, width: 300, radius: 150};\n// const center = { x: dims.width / 2 + 5, y: dims.height / 2 + 5 }\n\nconst HealthInfoViz = () => {\n  const [dataList, setDataList] = useState([\n    {\n      label: '건강',\n      value: 30\n    },\n    {\n      label: '식사량',\n      value: 70\n    }\n  ]);\n\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n\n  const createArc = d3\n    .arc()\n    .innerRadius(dims.radius / 2)\n    .outerRadius(dims.radius);\n\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format('.2f');\n  const data = createPie(dataList);\n\n  const onClickArc = pieData => () => {\n    const valueIsWithinRange = dataObj => {\n      const { value } = dataObj;\n      return value > 1 && value < 99;\n    };\n    const canIncrease = ({ value }) => value < 99\n    const canDecrease = ({ value }) => value > 1\n\n    const [healthObj, mealAmountObj] = dataList;\n\n    if (pieData.data.label === '건강' && canIncrease(healthObj) && canDecrease(mealAmountObj)) {\n      setDataList([\n        {\n          ...healthObj,\n          value: healthObj.value + 1\n        },\n        {\n          ...mealAmountObj,\n          value: mealAmountObj.value - 1\n        }\n      ]);\n    } else if (pieData.data.label === '식사량' && canDecrease(healthObj) && canIncrease(mealAmountObj)) {\n      setDataList([\n        {\n          ...healthObj,\n          value: healthObj.value - 1\n        },\n        {\n          ...mealAmountObj,\n          value: mealAmountObj.value + 1\n        }\n      ]);\n    }\n\n  }\n\n  return (\n    <svg width={dims.width} height={dims.height}>\n      <g transform={`translate(${dims.radius} ${dims.radius})`}>\n        {data.map((d, i) => (\n          <HealthInfoArc \n            key={`health-info-arc-${i}`}\n            data={d}\n            index={i}\n            createArc={createArc}\n            colors={colors}\n            format={format}\n            onClick={onClickArc(d)}\n          />\n        ))}\n      </g>\n    </svg>\n  );\n  // const d3Container = useRef(null);\n  // const [health, setHealth] = useState(30)\n\n  // useEffect(() => {\n  //   if (health && d3Container.current) {\n  //     const svg = d3.select(d3Container.current);\n\n  //     const graph = svg\n  //       .append('g')\n  //       .attr('transform', `translate(${center.x}, ${center.y})`)\n  //       // .selectAll('text')\n  //       // .data(health)\n\n  //     const pie = d3\n  //       .pie()\n  //       .sort(null)\n  //       .value(d => d)\n\n  //     const arcPath = d3\n  //       .arc()\n  //       .outerRadius(dims.radius)\n  //       .innerRadius(dims.radius / 2);\n\n  //     const update = data => {\n  //       const path = graph.selectAll('path').data(pie(data))\n\n  //       path\n  //         .enter()\n  //         .append('path')\n  //         .attr('class', 'arc')\n  //         .attr('d', arcPath)\n  //         .attr('stroke', 'black')\n  //         .attr('stroke-width', 3);\n  //     }\n\n  //     update(health)\n\n  //     // update.enter()\n  //     //   .append('text')\n  //     //   .attr('x', (d, i) => i * 25)\n  //     //   .attr('y', 40)\n  //     //   .style('font-size', 24)\n  //     //   .text(d => d)\n\n  //     // update\n  //     //   .attr('x', (d, i) => i * 40)\n  //     //   .text(d => d);\n\n  //     // update.exit()\n  //     //   .remove();\n  //   }\n  // }, [health, d3Container.current])\n\n  // return (\n  //   <svg \n  //     width={200}\n  //     height={200}\n  //     ref={d3Container}\n  //   />\n  // );\n};\n\nexport default HealthInfoViz;\n","const HealthInfoText = () => {\n  return (\n    <div>health info text</div>\n  );\n};\n\nexport default HealthInfoText;\n","import InfoContainer from '../../container/InfoContainer';\nimport HealthInfoViz from './HealthInfoViz'\nimport HealthInfoText from './HealthInfoText'\n\nconst HealthInfo = () => {\n  console.log(HealthInfoViz)\n  return (\n    <InfoContainer \n      backgroundColor={'white'}\n      flex={1}\n      left={<HealthInfoViz />}\n      right={<HealthInfoText />}\n    />\n  );\n}\n\nexport default HealthInfo;\n","import Header from '../component/Header';\nimport InfoContainer from './InfoContainer';\nimport HealthInfo from '../component/HealthInfo';\n\nconst Main = () =>\n  <div>\n    <Header />\n    <div className=\"page-container\">\n      <HealthInfo />\n      {['red', 'white', 'red'].map((color, i) => \n        <InfoContainer\n          key={`container${i}`} \n          backgroundColor={color} \n          flex={i === 2 ? i : 1}\n        />)}\n    </div>\n  </div>;\n\nexport default Main;\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from './container/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}