{"version":3,"sources":["component/Header/tmapLogo.jpg","logo.svg","component/Header/wfpStandardLogo.svg","component/Header/index.js","hooks/useWindowSize.js","container/SimpleContainer.js","container/InfoContainer.js","container/constants.js","component/HealthInfo/HealthInfoArc.js","component/HealthInfo/HealthInfoViz.js","component/HealthInfo/constants.js","component/HealthInfo/HealthInfoText.js","component/HealthInfo/index.js","component/StarvationInfo/StarvationInfoText.js","component/StarvationInfo/constants.js","component/StarvationInfo/StarvationInfoChart.js","hooks/useD3.js","component/StarvationInfo/StarvationInfoVizController.js","component/StarvationInfo/StarvationInfoViz.js","component/StarvationInfo/index.js","component/CampaignInfo/CampaignInfoSlide.js","component/CampaignInfo/CampaignInfoSlider.js","component/CampaignInfo/cardNews1.png","component/CampaignInfo/cardNews2.png","component/CampaignInfo/cardNews3.png","component/CampaignInfo/cardNews4.png","component/CampaignInfo/cardNews5.png","component/CampaignInfo/index.js","container/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","tmapLogo","alt","wfpStandardLogo","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","SimpleContainer","backgroundColor","color","children","flex","flexDirection","style","InfoContainer","left","right","flexLeft","flexRight","HealthInfoArc","data","index","createArc","colors","format","onClick","onStart","onFinish","d","fill","transform","centroid","textAnchor","alignmentBaseline","fontSize","fontWeight","label","value","HealthInfoViz","reactiveSize","dims","radius","MOBILE_WIDTH","dataList","setDataList","createPie","d3","sort","innerRadius","outerRadius","map","i","pieData","canIncrease","canDecrease","mealAmountObj","healthObj","HealthInfoText","HealthInfo","StarvationInfoText","MAX_FOOD_WASTE_IN_TONS","MAX_UNDERNOURISHED_POPULATION","ZERO_HUNGER_POINT","STARVATION_INFO_CHART_D3_X_AXIS_ID","STARVATION_INFO_CHART_D3_Y_AXIS_ID","STARVATION_INFO_CHART_D3_BAR_CHART","margin","StarvationInfoChart","foodWasteInTons","isNotMobile","ref","renderChartFn","dependencies","useRef","current","useD3","svg","name","x","domain","range","padding","y","nice","yAxisFunc","ticks","select","call","g","attr","tickSizeOuter","remove","selectAll","join","bandwidth","drawFoodWasteChart","id","useStyles","makeStyles","root","colorPrimary","marks","StarvationInfoVizController","setFoodWasteInTons","classes","Slider","min","step","max","onChange","event","newValue","StarvationInfoViz","StarvationInfo","image","maxWidth","CampaignInfoSlide","img","vw80","containerHeight","images","CampaignInfoSlider","enabled","slides","autoPlay","CampaignInfo","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fb4a208.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmapLogo.3634d587.jpg\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/wfpStandardLogo.bedfca1a.svg\";","import tmapLogo from './tmapLogo.jpg'\nimport wfpStandardLogo from './wfpStandardLogo.svg';\n\nconst Header = () => \n  <header className=\"App-header\">\n    <img src={tmapLogo} className=\"App-logo\" alt=\"TMap Logo\" />\n    <span className=\"tab\">&#9;</span>\n    X\n    <span className=\"tab\">&#9;</span>\n    <img src={wfpStandardLogo} className=\"App-logo\" alt=\"WFP Logo\" />\n  </header>;\n\nexport default Header;\n","import {\n  useEffect,\n  useState\n} from 'react';\n\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = () => ({\n    width: isClient ? window.innerWidth : undefined,\n    height: isClient ? window.innerHeight : undefined\n  });\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient)\n      return false;\n\n    const handleResize = () => {\n      setWindowSize(getSize());\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n};\n","const SimpleContainer = ({backgroundColor, color, children, flex, flexDirection}) =>\n  <div \n    className=\"section-container\" \n    style={{\n      backgroundColor,\n      color,\n      flex,\n      flexDirection\n    }}\n  >\n    {children}\n  </div>;\n\nexport default SimpleContainer;\n","import { useWindowSize } from '../hooks/useWindowSize';\nimport SimpleContainer from './SimpleContainer';\nimport { MIN_WINDOW_WIDTH_FOR_ROW_FLEX } from './constants';\n\nconst InfoContainer = ({backgroundColor, color, flex, left, right, flexLeft, flexRight}) => {\n  const size = useWindowSize();\n  const flexDirection = size.width > MIN_WINDOW_WIDTH_FOR_ROW_FLEX ? 'row' : 'column';\n\n  return (\n    <SimpleContainer backgroundColor={backgroundColor} flex={flex} flexDirection={flexDirection} color={color}>\n      <SimpleContainer flex={flexLeft}>\n        {left}\n      </SimpleContainer>\n      <SimpleContainer flex={flexRight}>\n        {right}\n      </SimpleContainer>\n    </SimpleContainer>\n  );\n}\n  \n\nexport default InfoContainer;\n","export const MIN_WINDOW_WIDTH_FOR_ROW_FLEX = 870;\nexport const MOBILE_WIDTH = 300;\n","// import { useLongPress, LongPressDetectEvents } from 'use-long-press';\n\nconst HealthInfoArc = ({ data, index, createArc, colors, format, onClick, onStart, onFinish }) => {\n  // const bind = useLongPress(onClick, {\n  //   onStart: () => { \n  //     console.log('started') \n  //     onStart()\n  //   },\n  //   onFinish: () => { \n  //     console.log(\"Long press finished\")\n  //     onFinish()\n  //   },\n  //   onCancel: () => { console.log(\"Press cancelled\") },\n  //   threshold: 500,\n  //   captureEvent: true,\n  //   detect: LongPressDetectEvents.BOTH\n  // })\n  // console.log(bind)\n\n  return (\n    <g key={index} className=\"arc\">\n      <path \n        className=\"arc\" \n        d={createArc(data)} \n        fill={colors(index)}\n        onClick={onClick}\n        // {...bind}\n      />\n      <text\n        transform={`translate(${createArc.centroid(data)})`}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n        fill=\"white\"\n        fontSize=\"10\"\n        fontWeight=\"bold\"\n        onClick={onClick}\n        // {...bind}\n      >\n        {data.data.label}{`: `}{format(data.value)}\n      </text>\n    </g>\n  );\n}\n  \n\nexport default HealthInfoArc;\n","import { useState } from 'react';\nimport * as d3 from 'd3';\n\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport HealthInfoArc from './HealthInfoArc';\nimport { MIN_WINDOW_WIDTH_FOR_ROW_FLEX } from '../../container/constants';\nimport { MOBILE_WIDTH } from './constants';\n\nconst DEFAULT_DIMS = { height: 300, width: 300, radius: 150};\n// const center = { x: dims.width / 2 + 5, y: dims.height / 2 + 5 }\n\nconst HealthInfoViz = () => {\n  const windowSize = useWindowSize();\n  const reactiveSize = windowSize.width / 2 - 100; \n  const dims = windowSize.width > MIN_WINDOW_WIDTH_FOR_ROW_FLEX ? {\n    height: reactiveSize,\n    width: reactiveSize,\n    radius: reactiveSize / 2\n  } : {\n    height: MOBILE_WIDTH,\n    width: MOBILE_WIDTH,\n    radius: MOBILE_WIDTH / 2\n  };\n\n  const [dataList, setDataList] = useState([\n    {\n      label: '식사량',\n      value: 70\n    },\n    {\n      label: '건강',\n      value: 30\n    },\n  ]);\n  // const [pressed, setPressed] = useState(false);\n  // const onStart = () => { setPressed(true) }\n  // const onFinish = () => { setPressed(false) }\n\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n\n  const createArc = d3\n    .arc()\n    .innerRadius(dims.radius * 0.4)\n    .outerRadius(dims.radius);\n\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format('.2f');\n  const data = createPie(dataList);\n\n  const onClickArc = pieData => () => {\n    const canIncrease = ({ value }) => {\n      return value < 99\n    };\n    const canDecrease = ({ label, value }) => {\n      if (label === '식사량')\n        return value > 40\n      else\n        return value > 1\n    };\n\n    const [mealAmountObj, healthObj] = dataList;\n\n    if (pieData.data.label === '건강' && canIncrease(healthObj) && canDecrease(mealAmountObj)) {\n      setDataList([\n        {\n          ...mealAmountObj,\n          value: mealAmountObj.value - 1\n        },\n        {\n          ...healthObj,\n          value: healthObj.value + 1\n        },\n      ]);\n    } else if (pieData.data.label === '식사량' && canDecrease(healthObj) && canIncrease(mealAmountObj)) {\n      setDataList([\n        {\n          ...mealAmountObj,\n          value: mealAmountObj.value + 1\n        },\n        {\n          ...healthObj,\n          value: healthObj.value - 1\n        },\n      ]);\n    }\n    \n  }\n\n  return (\n    <svg width={dims.width} height={dims.height}>\n      <g transform={`translate(${dims.radius} ${dims.radius})`}>\n        {data.map((d, i) => (\n          <HealthInfoArc \n            key={`health-info-arc-${i}`}\n            data={d}\n            index={i}\n            createArc={createArc}\n            colors={colors}\n            format={format}\n            onClick={onClickArc(d)}\n            // onStart={onStart}\n            // onFinish={onFinish}\n          />\n        ))}\n      </g>\n    </svg>\n  );\n  // const d3Container = useRef(null);\n  // const [health, setHealth] = useState(30)\n\n  // useEffect(() => {\n  //   if (health && d3Container.current) {\n  //     const svg = d3.select(d3Container.current);\n\n  //     const graph = svg\n  //       .append('g')\n  //       .attr('transform', `translate(${center.x}, ${center.y})`)\n  //       // .selectAll('text')\n  //       // .data(health)\n\n  //     const pie = d3\n  //       .pie()\n  //       .sort(null)\n  //       .value(d => d)\n\n  //     const arcPath = d3\n  //       .arc()\n  //       .outerRadius(dims.radius)\n  //       .innerRadius(dims.radius / 2);\n\n  //     const update = data => {\n  //       const path = graph.selectAll('path').data(pie(data))\n\n  //       path\n  //         .enter()\n  //         .append('path')\n  //         .attr('class', 'arc')\n  //         .attr('d', arcPath)\n  //         .attr('stroke', 'black')\n  //         .attr('stroke-width', 3);\n  //     }\n\n  //     update(health)\n\n  //     // update.enter()\n  //     //   .append('text')\n  //     //   .attr('x', (d, i) => i * 25)\n  //     //   .attr('y', 40)\n  //     //   .style('font-size', 24)\n  //     //   .text(d => d)\n\n  //     // update\n  //     //   .attr('x', (d, i) => i * 40)\n  //     //   .text(d => d);\n\n  //     // update.exit()\n  //     //   .remove();\n  //   }\n  // }, [health, d3Container.current])\n\n  // return (\n  //   <svg \n  //     width={200}\n  //     height={200}\n  //     ref={d3Container}\n  //   />\n  // );\n};\n\nexport default HealthInfoViz;\n","export const MOBILE_WIDTH = 300;\n","const HealthInfoText = () => {\n  return (\n    <div>health info text</div>\n  );\n};\n\nexport default HealthInfoText;\n","import InfoContainer from '../../container/InfoContainer';\nimport HealthInfoViz from './HealthInfoViz'\nimport HealthInfoText from './HealthInfoText'\n\nconst HealthInfo = () =>\n  <InfoContainer \n    backgroundColor={'white'}\n    flex={1}\n    left={<HealthInfoViz />}\n    right={<HealthInfoText />}\n    flexLeft={1}\n    flexRight={2}\n  />;\n\nexport default HealthInfo;\n","const StarvationInfoText = () => {\n  return (\n    <div>starvation info text</div>\n  );\n};\n\nexport default StarvationInfoText;\n","export const MAX_FOOD_WASTE_IN_TONS = 1300000000;\nexport const MAX_UNDERNOURISHED_POPULATION = 800000000;\nexport const FOOD_NEEDED_BY_INDIVIDUAL = MAX_FOOD_WASTE_IN_TONS / 4 / MAX_UNDERNOURISHED_POPULATION;\nexport const ZERO_HUNGER_POINT = MAX_FOOD_WASTE_IN_TONS / 4 * 3\n","import * as d3 from 'd3';\nimport { useD3 } from '../../hooks/useD3';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport {\n  FOOD_NEEDED_BY_INDIVIDUAL,\n  MAX_FOOD_WASTE_IN_TONS,\n  MAX_UNDERNOURISHED_POPULATION,\n  ZERO_HUNGER_POINT,\n} from './constants';\nimport {\n  MIN_WINDOW_WIDTH_FOR_ROW_FLEX,\n  MOBILE_WIDTH\n} from '../../container/constants';\n\nconst STARVATION_INFO_CHART_D3_X_AXIS_ID = 'starvation-info-chart-d3-x-axis';\nconst STARVATION_INFO_CHART_D3_Y_AXIS_ID = 'starvation-info-chart-d3-y-axis';\nconst STARVATION_INFO_CHART_D3_BAR_CHART = 'starvation-info-chart-d3-bar-chart';\n\n// const DEFAULT_DIMS = { height: 300, width: 600, radius: 150};\nconst margin = ({top: 30, right: 0, bottom: 30, left: 80});\n// const graphWidth = dims.width - margin.left - margin.right;\n// const graphHeight = dims.height - margin.top - margin.bottom;\n\nconst StarvationInfoChart = ({ foodWasteInTons }) => {\n  const windowSize = useWindowSize();\n  const reactiveSize = windowSize.width / 2 - 100\n  const isNotMobile = windowSize.width > MIN_WINDOW_WIDTH_FOR_ROW_FLEX;\n  const dims = isNotMobile ? {\n    height: reactiveSize / 2,\n    width: reactiveSize,\n  } : {\n    height: MOBILE_WIDTH / 2,\n    width: MOBILE_WIDTH\n  }\n\n  const drawFoodWasteChart = (svg) => {\n    const undernourishedPopulation = foodWasteInTons > ZERO_HUNGER_POINT ? \n      MAX_UNDERNOURISHED_POPULATION - ((MAX_FOOD_WASTE_IN_TONS - foodWasteInTons) / FOOD_NEEDED_BY_INDIVIDUAL) :\n      0;\n    const surplusFood = foodWasteInTons > ZERO_HUNGER_POINT ? 0 : ZERO_HUNGER_POINT - foodWasteInTons;\n    const data = [\n      {\n        name: '음식물 쓰레기 양',\n        value: foodWasteInTons,\n        color: 'orange'\n      },\n      {\n        name: '굶주린 사람들',\n        value: undernourishedPopulation,\n        color: 'gray'\n      },\n      {\n        name: '남는 식량',\n        value: surplusFood,\n        color: 'green'\n      }\n    ];\n\n    const x = d3.scaleBand()\n      .domain((data.map(d => d.name)))\n      .range([margin.left, dims.width - margin.right])\n      .padding(0.2);\n\n    const y = d3.scaleLinear()\n      .domain([0, MAX_FOOD_WASTE_IN_TONS + 100000000])\n      .nice()\n      .range([dims.height - margin.bottom, margin.top])\n\n    const xAxis = g => g\n      .attr('transform', `translate(0, ${dims.height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n\n    const yAxisFunc = isNotMobile ? d3.axisLeft(y) : d3.axisLeft(y).ticks(7, 'f')\n    const yAxis = g => g\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .call(yAxisFunc)\n      .call(g => g.select('.domain').remove());\n\n\n    svg.select(`#${STARVATION_INFO_CHART_D3_X_AXIS_ID}`).call(xAxis);\n    svg.select(`#${STARVATION_INFO_CHART_D3_Y_AXIS_ID}`).call(yAxis);\n    \n    svg.select(`#${STARVATION_INFO_CHART_D3_BAR_CHART}`)\n      // .selectAll('rect').data(data).enter().append('rect')\n      .selectAll('.bar')\n      .data(data)\n      .join('rect')\n      .attr('class', 'bar')\n      .attr('fill', d => d.color)\n      .attr('x', d => x(d.name))\n      .attr('y', d => y(d.value))\n      .attr('height', d => y(0) - y(d.value))\n      .attr('width', x.bandwidth());\n  };\n\n  const ref = useD3(\n    (svg) => {\n      drawFoodWasteChart(svg);\n    },\n    [foodWasteInTons, windowSize.width]\n  );\n\n  return (\n    <div>\n      <svg ref={ref} width={dims.width} height={dims.height}>\n        <g id={STARVATION_INFO_CHART_D3_X_AXIS_ID}></g>\n        <g id={STARVATION_INFO_CHART_D3_Y_AXIS_ID}></g>\n        <g id={STARVATION_INFO_CHART_D3_BAR_CHART}></g>\n      </svg>\n    </div>\n  );\n};\n\nexport default StarvationInfoChart;\n","import { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n\n  return ref;\n};\n","import Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MAX_FOOD_WASTE_IN_TONS } from './constants';\n\nconst useStyles = makeStyles({\n  root: {\n    color: 'white',\n    colorPrimary: 'white',\n  },\n})\n\nconst marks = [\n  {\n    value: 0,\n    label: '0T'\n  },\n  {\n    value: MAX_FOOD_WASTE_IN_TONS,\n    label: '1.3T'\n  }\n];\n\nconst StarvationInfoVizController = ({ foodWasteInTons, setFoodWasteInTons }) => {\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setFoodWasteInTons(newValue);\n  };\n\n  return (\n    <Slider \n      className={classes.root}\n      value={foodWasteInTons}\n      min={0}\n      step={1}\n      max={MAX_FOOD_WASTE_IN_TONS}\n      marks={marks}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default StarvationInfoVizController;\n\n","import { useState } from 'react';\nimport StarvationInfoChart from './StarvationInfoChart';\nimport StarvationInfoVizController from './StarvationInfoVizController';\n\nconst StarvationInfoViz = () => {\n  const [foodWasteInTons, setFoodWasteInTons] = useState(1300000000);\n\n  return (\n    <div>\n      \n      <StarvationInfoChart foodWasteInTons={foodWasteInTons} />\n      <StarvationInfoVizController\n        foodWasteInTons={foodWasteInTons}\n        setFoodWasteInTons={setFoodWasteInTons}\n      />\n    </div>\n    \n  );\n};\n\nexport default StarvationInfoViz;\n","import InfoContainer from '../../container/InfoContainer';\nimport StarvationInfoText from './StarvationInfoText';\nimport StarvationInfoViz from './StarvationInfoViz';\n\nconst StarvationInfo = () =>\n  <InfoContainer \n    backgroundColor={'#ea002c'}\n    color={'white'}\n    flex={1}\n    left={<StarvationInfoText />}\n    right={<StarvationInfoViz />}\n  />;\n\nexport default StarvationInfo;\n","import { makeStyles } from '@material-ui/styles';\nimport { useWindowSize } from '../../hooks/useWindowSize';\n\nconst useStyles = makeStyles({\n  image: {\n    maxWidth: '800px',\n    width: '80vw',\n    // height: ''\n  }\n});\n\nconst CampaignInfoSlide = ({ img }) => {\n  const classes = useStyles();\n  const windowSize = useWindowSize();\n  const vw80 = windowSize.width * 0.8;\n  const containerHeight = vw80 > 800 ? 800 : vw80\n\n  return (\n    <div height={containerHeight}>\n      <img \n        className={classes.image} \n        src={img} \n        alt={'A card news slide'} \n      />\n    </div>\n    \n  );\n}\n\n\nexport default CampaignInfoSlide;\n","import Carousel from 'react-material-ui-carousel';\nimport SimpleContainer from '../../container/SimpleContainer';\nimport CampaignInfoSlide from './CampaignInfoSlide';\n\nimport cardNews1 from './cardNews1.png'\nimport cardNews2 from './cardNews2.png'\nimport cardNews3 from './cardNews3.png'\nimport cardNews4 from './cardNews4.png'\nimport cardNews5 from './cardNews5.png'\n\nconst images = [\n  cardNews1,\n  cardNews2,\n  cardNews3,\n  cardNews4,\n  cardNews5\n];\n\nconst CampaignInfoSlider = ({ enabled }) => {\n  const slides = images.map((img, i) => \n    <CampaignInfoSlide \n      key={`campaign-info-slide-${i}`} \n      img={img} \n    />)\n\n  if (enabled)\n    return (\n      <Carousel\n        autoPlay={false}\n      >\n        {slides}     \n      </Carousel>\n    );\n  else\n    return (\n      <SimpleContainer flex={1} flexDirection={'column'}>\n        {slides}\n      </SimpleContainer>\n    );\n}\n\nexport default CampaignInfoSlider;\n","export default __webpack_public_path__ + \"static/media/cardNews1.73074dc8.png\";","export default __webpack_public_path__ + \"static/media/cardNews2.79b4f128.png\";","export default __webpack_public_path__ + \"static/media/cardNews3.3745e11d.png\";","export default __webpack_public_path__ + \"static/media/cardNews4.6e0a77ac.png\";","export default __webpack_public_path__ + \"static/media/cardNews5.1ec577ce.png\";","import SimpleContainer from '../../container/SimpleContainer';\nimport CampaignInfoSlider from './CampaignInfoSlider';\n\nconst CampaignInfo = () =>\n  <SimpleContainer flex={1}>\n    <CampaignInfoSlider enabled={true} />\n  </SimpleContainer>;\n\nexport default CampaignInfo;\n","import Header from '../component/Header';\nimport InfoContainer from './InfoContainer';\nimport HealthInfo from '../component/HealthInfo';\nimport StarvationInfo from '../component/StarvationInfo';\nimport CampaignInfo from '../component/CampaignInfo';\n\nconst Main = () =>\n  <div>\n    <Header />\n    <div className=\"page-container\">\n      <HealthInfo />\n      <StarvationInfo />\n      <CampaignInfo />\n      {['red'].map((color, i) => \n        <InfoContainer\n          key={`container${i}`} \n          backgroundColor={color} \n          // flex={i === 0 ? 2 : 1}\n          flex={1}\n        />)}\n    </div>\n  </div>;\n\nexport default Main;\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from './container/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}